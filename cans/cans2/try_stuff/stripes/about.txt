Empty cultures on the plate are identifieable by the gene name
"EMPTY".

If we do not remove cell observations for these cultures from the
objective function it will bias our estimate of C_0 (a plate level
parameter), due to background noise. It is not enough to just set b=0.

How to do this?

For the guesser we can just skip empty cultures and set b=0. The guess
of N_0 isn't as important but should probably be based on only the
final cell amounts of the growing cultures.

No changes are required for the sbml. We still need to solve cells for
empty cultures and we can bound b to be zero.

We must remove cell measurements from the objective function
evaluation. To do this make a c_meas_obj to use in objective function
evaluations and use c_meas for plots etc. Then slice the result of the
solver to remove the empties in the objective function.

There are 49 timepoints in the stripes data. There were only 10 for
p15. As a result, simulating between timepoints is much slower. We are
also having to slice simulated amounts for only the growers (i.e. to
remove the empties). This is already likely to be slower, but with
many timepoints the arrays become much larger. Fits were taking a long
time, especially for the plate with empties; supporting the idea that
for growers is slower. To speed things up I am using a 5th power
spline of c_meas to get c_spline, evenly spaced cell measurements. I
am doing this for 15 timepoints. Having even steps now allows us to
call rr.simulate once, rather for every timestep, and is also likely
to be quicker.


Results are now in
/home/b5060236/projects/CANS/cans/cans2/try_stuff/stripes/comp_model_bc_spline

I took the best estimate for the filled plate, set b=0 for the filled
spots, resimulated, and compared to the stiped plate estimate.

The best results seem to come when using the striped plate level
parameter estimates for the filled simulation "shared". The case where
I use the different estimated plate level parameters, "keep", doesn't
look very good.

Below are arrays of [C_0, N_0, NE_0, kn, mean(b)] for each plate. The
biggest difference seems to be the estimates of kn, which
are higher for the filled plate.

('Barcodes', set(['K000343_027_001', 'K000347_027_022']))
('Barcodes', set(['K000343_027_001', 'K000347_027_022']))
Empty
[  8.31516580e-03   8.52478747e-02   9.56422301e-02   1.92525936e+00   3.94703502e+01]
Filled
[  6.17038651e-03   1.16606279e-01   1.83021704e-01   4.84354755e+00   2.79169304e+01]

Unless there are mistakes, there appears to be a fair amount of
biological variance present. For example, the data for the culture (4,
5) is very different between plates - much more so than could be
explained by competition effects.

I need to check the b correlation/ranking for the best fits to see if
they are consistent for each plate. We are unlikely to be finding
global minima. If not, I might see if I can increase the precision of
the solver and run again.


I also plotted comparisons of the 1st best stripes and 3rd best fitted
estimates and 4th best stripes and 5th best filled estimates (without
parameter sharing) because the plate level parameters were more
similar. This did not make any significant difference over just
plotting the 1st best estimates for both (without parameter sharing).
